<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用字典</title>
    <link href="/2022/03/20/%E4%BD%BF%E7%94%A8%E5%AD%97%E5%85%B8%E7%9A%84%E5%89%AF%E6%9C%AC/"/>
    <url>/2022/03/20/%E4%BD%BF%E7%94%A8%E5%AD%97%E5%85%B8%E7%9A%84%E5%89%AF%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>Python 内置了字典(dict)的支持，使用键-值（key-value）存储，具有极快的查找速度。字典是另一种可变容器模型，且可存储任意类型对象。字典的每个键值对(key&#x3D;&gt;value)用冒号(:)分割，每对之间用逗号(,)分割，整个字典包括在花括号({})中 ，语法格式如下： </p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">d = &#123;key1 : value1, key2 : value2 &#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#创建字典</span><br>name = &#123;<span class="hljs-number">1</span>:<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-number">2</span>:<span class="hljs-string">&#x27;xu&#x27;</span>,<span class="hljs-number">3</span>:<span class="hljs-string">&#x27;xiong&#x27;</span>,<span class="hljs-number">4</span>:<span class="hljs-string">&#x27;xie&#x27;</span>&#125;<br><span class="hljs-comment">#添加键值对</span><br>name = &#123;<span class="hljs-number">1</span>:<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-number">2</span>:<span class="hljs-string">&#x27;xu&#x27;</span>&#125;<br>name[<span class="hljs-number">3</span>] = <span class="hljs-string">&#x27;xiong&#x27;</span><br>name[<span class="hljs-number">4</span>] = <span class="hljs-string">&#x27;xie&#x27;</span><br><span class="hljs-built_in">print</span>(name)<br><span class="hljs-comment">#修改字典中的值</span><br>name = &#123;<span class="hljs-number">1</span>:<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-number">2</span>:<span class="hljs-string">&#x27;xu&#x27;</span>&#125;<br>name[<span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;xiong&#x27;</span><br><span class="hljs-built_in">print</span>(name)<br><span class="hljs-comment">#删除键值对</span><br>name = &#123;<span class="hljs-number">1</span>:<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-number">2</span>:<span class="hljs-string">&#x27;xu&#x27;</span>,<span class="hljs-number">3</span>:<span class="hljs-string">&#x27;xiong&#x27;</span>,<span class="hljs-number">4</span>:<span class="hljs-string">&#x27;xie&#x27;</span>&#125;<br><span class="hljs-keyword">del</span> name[<span class="hljs-number">1</span>]<br>name<br><span class="hljs-comment">#使用get（）来访问值</span><br>name = &#123;<span class="hljs-number">1</span>:<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-number">2</span>:<span class="hljs-string">&#x27;xu&#x27;</span>,<span class="hljs-number">3</span>:<span class="hljs-string">&#x27;xiong&#x27;</span>,<span class="hljs-number">4</span>:<span class="hljs-string">&#x27;xie&#x27;</span>&#125;<br>names = name.get(<span class="hljs-number">5</span>,<span class="hljs-string">&#x27;zhi&#x27;</span>)<br>names<br><span class="hljs-comment">#</span><br><br></code></pre></div></td></tr></table></figure><h3 id="创建字典"><a href="#创建字典" class="headerlink" title="创建字典"></a>创建字典</h3><p><img src="/images/hexo2.png"></p><h3 id="添加键值对"><a href="#添加键值对" class="headerlink" title="添加键值对"></a>添加键值对</h3><p><img src="/images/hexo3.png"></p><h3 id="修改字典中的值"><a href="#修改字典中的值" class="headerlink" title="修改字典中的值"></a>修改字典中的值</h3><p><img src="/images/hexo4.png"></p><h3 id="删除键值对"><a href="#删除键值对" class="headerlink" title="删除键值对"></a>删除键值对</h3><p><img src="/images/hexo5.png"></p><p>删除的键值会永远消失</p><h3 id="使用get（）来访问值"><a href="#使用get（）来访问值" class="headerlink" title="使用get（）来访问值"></a>使用get（）来访问值</h3><p><img src="/images/hexo6.png"></p><p>get()的第一个参数用于指定键，是必不可少的，第二个参数为指定的键不存在时要返回的值，是可选的，如果指定的键可能不存在，应该考虑使用方法get(),如果说没有指定第二个参数且指定的键不存在，返回值为None。</p>]]></content>
    
    
    <categories>
      
      <category>字典</category>
      
    </categories>
    
    
    <tags>
      
      <tag>字典</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>if语句</title>
    <link href="/2022/03/20/if%E8%AF%AD%E5%8F%A5/"/>
    <url>/2022/03/20/if%E8%AF%AD%E5%8F%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="确定列表是不是空的"><a href="#确定列表是不是空的" class="headerlink" title="确定列表是不是空的"></a>确定列表是不是空的</h3><p>在if语句中将列表名用作条件表达式时，python将在列表至少包含一个元素时返回为true，否则返回false</p><p><img src="/images/hexo-if.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>if语句</category>
      
    </categories>
    
    
    <tags>
      
      <tag>if语句</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>元组</title>
    <link href="/2022/03/20/%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/%E5%85%83%E7%BB%84/"/>
    <url>/2022/03/20/%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/%E5%85%83%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#定义元组</span><br>name = (<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;xu&#x27;</span>,<span class="hljs-string">&#x27;xiong&#x27;</span>,<span class="hljs-string">&#x27;xie&#x27;</span>)<br>name<br><span class="hljs-comment">#遍历元组中的所有值</span><br>name = (<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;xu&#x27;</span>,<span class="hljs-string">&#x27;xiong&#x27;</span>,<span class="hljs-string">&#x27;xie&#x27;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> name:<br>    <span class="hljs-built_in">print</span>(i)<br><span class="hljs-comment">#修改元组变量</span><br>name = (<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;xu&#x27;</span>,<span class="hljs-string">&#x27;xiong&#x27;</span>,<span class="hljs-string">&#x27;xie&#x27;</span>)<br>name = (<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;xu&#x27;</span>)<br>name<br></code></pre></div></td></tr></table></figure><h3 id="定义元组"><a href="#定义元组" class="headerlink" title="定义元组"></a>定义元组</h3><p>试图修改元组的操作是被禁止的</p><h3 id="修改元组变量"><a href="#修改元组变量" class="headerlink" title="修改元组变量"></a>修改元组变量</h3><p>给元组变量重新赋值是允许的</p>]]></content>
    
    
    <categories>
      
      <category>操作列表</category>
      
    </categories>
    
    
    <tags>
      
      <tag>列表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用列表的一部分</title>
    <link href="/2022/03/20/%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/%E4%BD%BF%E7%94%A8%E5%88%97%E8%A1%A8%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86/"/>
    <url>/2022/03/20/%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/%E4%BD%BF%E7%94%A8%E5%88%97%E8%A1%A8%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#切片</span><br>name = [<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;xu&#x27;</span>,<span class="hljs-string">&#x27;xiong&#x27;</span>,<span class="hljs-string">&#x27;xie&#x27;</span>]<br><span class="hljs-built_in">print</span>(name[<span class="hljs-number">1</span>:<span class="hljs-number">3</span>])<br><span class="hljs-built_in">print</span>(name[:<span class="hljs-number">3</span>])<br><span class="hljs-built_in">print</span>(name[<span class="hljs-number">1</span>:])<br><span class="hljs-built_in">print</span>(name[:])<br><span class="hljs-built_in">print</span>(name[-<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>])<br><span class="hljs-comment">#遍历切片</span><br>name = [<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;xu&#x27;</span>,<span class="hljs-string">&#x27;xiong&#x27;</span>,<span class="hljs-string">&#x27;xie&#x27;</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> name[<span class="hljs-number">1</span>:<span class="hljs-number">3</span>]:<br>    <span class="hljs-built_in">print</span>(i)<br><span class="hljs-comment">#复制列表</span><br>name = [<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;xu&#x27;</span>,<span class="hljs-string">&#x27;xiong&#x27;</span>,<span class="hljs-string">&#x27;xie&#x27;</span>]<br>names = name[:]<br><span class="hljs-built_in">print</span>(names)<br><br>name = [<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;xu&#x27;</span>,<span class="hljs-string">&#x27;xiong&#x27;</span>,<span class="hljs-string">&#x27;xie&#x27;</span>]<br>names = name.copy()<br>names<br></code></pre></div></td></tr></table></figure><h3 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h3><p>与range()一样，再到达第二个索引之前的元素后停止</p><h3 id="复制列表"><a href="#复制列表" class="headerlink" title="复制列表"></a>复制列表</h3><p>1.要复制列表，可创建一个包含整个列表的切片，方法是同时省略起始索引和终止索引</p><p>2.使用copy()复制列表</p>]]></content>
    
    
    <categories>
      
      <category>操作列表</category>
      
    </categories>
    
    
    <tags>
      
      <tag>列表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>列表解析</title>
    <link href="/2022/03/20/%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/%E5%88%97%E8%A1%A8%E8%A7%A3%E6%9E%90/"/>
    <url>/2022/03/20/%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/%E5%88%97%E8%A1%A8%E8%A7%A3%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#列表解析</span><br>squares = [value**<span class="hljs-number">2</span> <span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>)]<br>squares<br></code></pre></div></td></tr></table></figure><h4 id="列表解析"><a href="#列表解析" class="headerlink" title="列表解析"></a>列表解析</h4><p>列表解析将for循环和创建新元素的代码合并成一行，并自动附加新元素</p>]]></content>
    
    
    <categories>
      
      <category>操作列表</category>
      
    </categories>
    
    
    <tags>
      
      <tag>列表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>对数字列表进行简单的统计计算</title>
    <link href="/2022/03/20/%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/%E5%AF%B9%E6%95%B0%E5%AD%97%E5%88%97%E8%A1%A8%E6%89%A7%E8%A1%8C%E7%AE%80%E5%8D%95%E7%9A%84%E7%BB%9F%E8%AE%A1%E8%AE%A1%E7%AE%97/"/>
    <url>/2022/03/20/%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/%E5%AF%B9%E6%95%B0%E5%AD%97%E5%88%97%E8%A1%A8%E6%89%A7%E8%A1%8C%E7%AE%80%E5%8D%95%E7%9A%84%E7%BB%9F%E8%AE%A1%E8%AE%A1%E7%AE%97/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#对数字列表执行简单的统计计算</span><br>a = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">min</span>(a)) <span class="hljs-comment">#统计最小值</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">max</span>(a)) <span class="hljs-comment">#统计最大值</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">sum</span>(a)) <span class="hljs-comment">#求和</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>操作列表</category>
      
    </categories>
    
    
    <tags>
      
      <tag>列表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>确定列表长度</title>
    <link href="/2022/03/20/%E5%88%97%E8%A1%A8%E7%AE%80%E4%BB%8B/%E7%A1%AE%E5%AE%9A%E5%88%97%E8%A1%A8%E9%95%BF%E5%BA%A6/"/>
    <url>/2022/03/20/%E5%88%97%E8%A1%A8%E7%AE%80%E4%BB%8B/%E7%A1%AE%E5%AE%9A%E5%88%97%E8%A1%A8%E9%95%BF%E5%BA%A6/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#确定列表长度</span><br>names = [<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;zhi&#x27;</span>,<span class="hljs-string">&#x27;ying&#x27;</span>,<span class="hljs-string">&#x27;li&#x27;</span>]<br><span class="hljs-built_in">len</span>(names)<br></code></pre></div></td></tr></table></figure><h4 id="len-确定列表长度"><a href="#len-确定列表长度" class="headerlink" title="len()确定列表长度"></a>len()确定列表长度</h4><p><img src="/images/list4.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>列表简介</category>
      
    </categories>
    
    
    <tags>
      
      <tag>列表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>创建数值列表</title>
    <link href="/2022/03/20/%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/%E5%88%9B%E5%BB%BA%E6%95%B0%E5%80%BC%E5%88%97%E8%A1%A8/"/>
    <url>/2022/03/20/%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/%E5%88%9B%E5%BB%BA%E6%95%B0%E5%80%BC%E5%88%97%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#使用函数range（）</span><br><span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>):<br>    <span class="hljs-built_in">print</span>(value)<br><span class="hljs-comment">#range（）创建数字列表</span><br>a = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>))<br><span class="hljs-built_in">print</span>(a)<br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>操作列表</category>
      
    </categories>
    
    
    <tags>
      
      <tag>列表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>for循环遍历列表</title>
    <link href="/2022/02/28/%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/for%E5%BE%AA%E7%8E%AF%E9%81%8D%E5%8E%86%E5%88%97%E8%A1%A8/"/>
    <url>/2022/02/28/%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/for%E5%BE%AA%E7%8E%AF%E9%81%8D%E5%8E%86%E5%88%97%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#for循环遍历列表</span><br>names = [<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;zhi&#x27;</span>,<span class="hljs-string">&#x27;ying&#x27;</span>,<span class="hljs-string">&#x27;li&#x27;</span>]<br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> names:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;name.title()&#125;</span>,good&quot;</span>)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>操作列表</category>
      
    </categories>
    
    
    <tags>
      
      <tag>列表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>列表排序</title>
    <link href="/2022/02/28/%E5%88%97%E8%A1%A8%E7%AE%80%E4%BB%8B/%E5%88%97%E8%A1%A8%E6%8E%92%E5%BA%8F/"/>
    <url>/2022/02/28/%E5%88%97%E8%A1%A8%E7%AE%80%E4%BB%8B/%E5%88%97%E8%A1%A8%E6%8E%92%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#sort()对列表永久排序</span><br>names = [<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;zhi&#x27;</span>,<span class="hljs-string">&#x27;ying&#x27;</span>,<span class="hljs-string">&#x27;li&#x27;</span>]<br>names.sort()<br><span class="hljs-built_in">print</span>(names)<br>names.sort(reverse=<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(names)<br><span class="hljs-comment">#sorted()对列表临时排序</span><br>names = [<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;zhi&#x27;</span>,<span class="hljs-string">&#x27;ying&#x27;</span>,<span class="hljs-string">&#x27;li&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">sorted</span>(names))<br><span class="hljs-built_in">print</span>(names)<br><span class="hljs-comment">#倒着打印列表</span><br>names = [<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;zhi&#x27;</span>,<span class="hljs-string">&#x27;ying&#x27;</span>,<span class="hljs-string">&#x27;li&#x27;</span>]<br>names.reverse()<br>names<br></code></pre></div></td></tr></table></figure><h4 id="Sort-对列表永久排序"><a href="#Sort-对列表永久排序" class="headerlink" title="Sort()对列表永久排序"></a>Sort()对列表永久排序</h4><p><img src="/images/list1.jpg"></p><h4 id="sorted-对列表临时排序"><a href="#sorted-对列表临时排序" class="headerlink" title="sorted()对列表临时排序"></a>sorted()对列表临时排序</h4><p><img src="/images/list2.jpg"></p><h4 id="倒着打印列表"><a href="#倒着打印列表" class="headerlink" title="倒着打印列表"></a>倒着打印列表</h4><p><img src="/images/list3.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>列表简介</category>
      
    </categories>
    
    
    <tags>
      
      <tag>列表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>修改、添加和删除元素</title>
    <link href="/2022/02/27/%E5%88%97%E8%A1%A8%E7%AE%80%E4%BB%8B/%E4%BF%AE%E6%94%B9%E3%80%81%E6%B7%BB%E5%8A%A0%E5%92%8C%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0/"/>
    <url>/2022/02/27/%E5%88%97%E8%A1%A8%E7%AE%80%E4%BB%8B/%E4%BF%AE%E6%94%B9%E3%80%81%E6%B7%BB%E5%8A%A0%E5%92%8C%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">name = [<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;xu&#x27;</span>,<span class="hljs-string">&#x27;xiong&#x27;</span>,<span class="hljs-string">&#x27;xie&#x27;</span>]<br><span class="hljs-comment">#修改列表元素</span><br>name[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;li&#x27;</span><br><span class="hljs-comment">#在列表末尾添加元素</span><br>name.append[<span class="hljs-string">&#x27;li&#x27;</span>]<br><span class="hljs-comment">#在列表中插入元素</span><br>name.insert(<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;li&#x27;</span>)<br><span class="hljs-comment">#目标列表元素添加到本列表末尾</span><br>a = [<span class="hljs-number">10</span>,<span class="hljs-number">20</span>,<span class="hljs-number">30</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a的地址:&#x27;</span>,a)<br>b = [<span class="hljs-number">40</span>,<span class="hljs-number">50</span>]<br>a.extend(b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a列表的元素&#x27;</span>,a)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a的地址:&#x27;</span>,<span class="hljs-built_in">id</span>(a))<br><span class="hljs-comment">#del列表删除元素</span><br><span class="hljs-keyword">del</span> name[<span class="hljs-number">0</span>]<br><span class="hljs-comment">#pop删除元素</span><br>names = [<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;zhi&#x27;</span>,<span class="hljs-string">&#x27;ying&#x27;</span>,<span class="hljs-string">&#x27;li&#x27;</span>]<br>name = names.pop()<br><span class="hljs-built_in">print</span>(name)<br><span class="hljs-built_in">print</span>(names)<br><span class="hljs-comment">#根据值删除元素</span><br>names = [<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;zhi&#x27;</span>,<span class="hljs-string">&#x27;ying&#x27;</span>,<span class="hljs-string">&#x27;li&#x27;</span>]<br>name = names.remove(<span class="hljs-string">&#x27;xiao&#x27;</span>)<br>names<br><span class="hljs-comment">#清空列表元素</span><br>name = [<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;zhi&#x27;</span>,<span class="hljs-string">&#x27;ying&#x27;</span>,<span class="hljs-string">&#x27;li&#x27;</span>]<br>name.clear()<br>name<br></code></pre></div></td></tr></table></figure><h4 id="修改列表元素"><a href="#修改列表元素" class="headerlink" title="修改列表元素"></a>修改列表元素</h4><p>name[0] &#x3D; ‘li’</p><h4 id="在列表末尾添加元素"><a href="#在列表末尾添加元素" class="headerlink" title="在列表末尾添加元素"></a>在列表末尾添加元素</h4><p>name.append[‘li’]</p><h4 id="在列表中插入元素"><a href="#在列表中插入元素" class="headerlink" title="在列表中插入元素"></a>在列表中插入元素</h4><p>name.insert(0,’li’)</p><h4 id="目标列表元素添加到本列表末尾"><a href="#目标列表元素添加到本列表末尾" class="headerlink" title="目标列表元素添加到本列表末尾"></a>目标列表元素添加到本列表末尾</h4><p><img src="/images/list5.jpg"></p><p>属于原地操作，不创建新的列表对象。</p><h4 id="del列表删除元素"><a href="#del列表删除元素" class="headerlink" title="del列表删除元素"></a>del列表删除元素</h4><p>del name[0]</p><h4 id="pop删除元素"><a href="#pop删除元素" class="headerlink" title="pop删除元素"></a>pop删除元素</h4><p><img src="/images/list6.jpg"></p><h4 id="根据值删除元素"><a href="#根据值删除元素" class="headerlink" title="根据值删除元素"></a>根据值删除元素</h4><p><img src="/images/list7.jpg"></p><h4 id="清空列表元素"><a href="#清空列表元素" class="headerlink" title="清空列表元素"></a>清空列表元素</h4><p><img src="/images/list8.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>列表简介</category>
      
    </categories>
    
    
    <tags>
      
      <tag>列表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>删除空白</title>
    <link href="/2022/02/27/%E5%88%97%E8%A1%A8%E7%AE%80%E4%BB%8B/%E5%88%A0%E9%99%A4%E7%A9%BA%E7%99%BD/"/>
    <url>/2022/02/27/%E5%88%97%E8%A1%A8%E7%AE%80%E4%BB%8B/%E5%88%A0%E9%99%A4%E7%A9%BA%E7%99%BD/</url>
    
    <content type="html"><![CDATA[<p>确保字符末尾没有空白，使用rstrip()</p><p>剔除字符串开头的空白，或者同时剔除字符串两边的空白，可以使用lstrip()和strip()</p><p>使用remove(‘ ‘)移除空白</p>]]></content>
    
    
    <categories>
      
      <category>列表简介</category>
      
    </categories>
    
    
    <tags>
      
      <tag>列表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在字符串中使用变量</title>
    <link href="/2022/02/27/%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8/%E5%9C%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%8F%98%E9%87%8F/"/>
    <url>/2022/02/27/%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8/%E5%9C%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%8F%98%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<p>f字符串</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">first_name = <span class="hljs-string">&quot;ada&quot;</span><br><br>last_name = <span class="hljs-string">&quot;lovelace&quot;</span><br><br>full_name = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;first_name&#125;</span> <span class="hljs-subst">&#123;last_name&#125;</span>&quot;</span><br><br><span class="hljs-built_in">print</span>(full_name)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;hello,<span class="hljs-subst">&#123;full_name.title()&#125;</span>&quot;</span>)<br><br><span class="hljs-meta">&gt;&gt;&gt; </span>a = <span class="hljs-number">1234</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-string">f&#x27;a is <span class="hljs-subst">&#123;a:^#10X&#125;</span>&#x27;</span>      <span class="hljs-comment"># 居中，宽度10位，十六进制整数（大写字母），显示0X前缀</span><br><span class="hljs-string">&#x27;a is   0X4D2   &#x27;</span><br> <br><span class="hljs-meta">&gt;&gt;&gt; </span>b = <span class="hljs-number">1234.5678</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-string">f&#x27;b is <span class="hljs-subst">&#123;b:&lt;+<span class="hljs-number">10.2</span>f&#125;</span>&#x27;</span>    <span class="hljs-comment"># 左对齐，宽度10位，显示正号（+），定点数格式，2位小数</span><br><span class="hljs-string">&#x27;b is +1234.57  &#x27;</span><br> <br><span class="hljs-meta">&gt;&gt;&gt; </span>c = <span class="hljs-number">12345678</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-string">f&#x27;c is <span class="hljs-subst">&#123;c:015,d&#125;</span>&#x27;</span>      <span class="hljs-comment"># 高位补零，宽度15位，十进制整数，使用,作为千分分割位</span><br><span class="hljs-string">&#x27;c is 000,012,345,678&#x27;</span><br> <br><span class="hljs-meta">&gt;&gt;&gt; </span>d = <span class="hljs-number">0.5</span> + <span class="hljs-number">2.5j</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-string">f&#x27;d is <span class="hljs-subst">&#123;d:<span class="hljs-number">30.3</span>e&#125;</span>&#x27;</span>      <span class="hljs-comment"># 宽度30位，科学计数法，3位小数</span><br><span class="hljs-string">&#x27;d is           5.000e-01+2.500e+00j&#x27;</span><br> <br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> datetime<br><span class="hljs-meta">&gt;&gt;&gt; </span>e = datetime.datetime.today()<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-string">f&#x27;the time is <span class="hljs-subst">&#123;e:%Y-%m-%d (%a) %H:%M:%S&#125;</span>&#x27;</span>   <span class="hljs-comment"># datetime时间格式</span><br><span class="hljs-string">&#x27;the time is 2018-07-14 (Sat) 20:46:02&#x27;</span><br></code></pre></div></td></tr></table></figure><p>![截屏2022-03-23 下午8.27.56](&#x2F;Users&#x2F;xiaozhiying&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;截屏2022-03-23 下午8.27.56.png)</p>]]></content>
    
    
    <categories>
      
      <category>运算符与变量使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>运算符与变量使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>修改字符串大小写</title>
    <link href="/2022/02/27/%E5%88%97%E8%A1%A8%E7%AE%80%E4%BB%8B/%E4%BF%AE%E6%94%B9%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%A7%E5%B0%8F%E5%86%99/"/>
    <url>/2022/02/27/%E5%88%97%E8%A1%A8%E7%AE%80%E4%BB%8B/%E4%BF%AE%E6%94%B9%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%A7%E5%B0%8F%E5%86%99/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">Name = <span class="hljs-string">&quot;ada lovelace&quot;</span><br><br><span class="hljs-built_in">print</span>(Name.title())<br><span class="hljs-built_in">print</span>(Name.upper())<br><span class="hljs-built_in">print</span>(Name.lower())<br></code></pre></div></td></tr></table></figure><p>title()以首字母大写的方式显示每个单词，即将每个单词的首字母都改为大写</p><p>name.upper() 全部改为大写</p><p>name.lower() 全部改为小写</p>]]></content>
    
    
    <categories>
      
      <category>列表简介</category>
      
    </categories>
    
    
    <tags>
      
      <tag>列表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/02/26/%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8/%E4%BC%98%E5%85%88%E7%BA%A7/"/>
    <url>/2022/02/26/%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8/%E4%BC%98%E5%85%88%E7%BA%A7/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th>运算符说明</th><th>Python运算符</th><th>优先级</th><th align="center">结合性</th><th>优先级顺序</th></tr></thead><tbody><tr><td>小括号</td><td>( )</td><td>19</td><td align="center">无</td><td>高 ︿  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |   |  | 低</td></tr><tr><td>索引运算符</td><td>x[i] 或 x[i1: i2 [:i3]]</td><td>18</td><td align="center">左</td><td></td></tr><tr><td>属性访问</td><td>x.attribute</td><td>17</td><td align="center">左</td><td></td></tr><tr><td>乘方</td><td>**</td><td>16</td><td align="center">右</td><td></td></tr><tr><td>按位取反</td><td>~</td><td>15</td><td align="center">右</td><td></td></tr><tr><td>符号运算符</td><td>+（正号）、-（负号）</td><td>14</td><td align="center">右</td><td></td></tr><tr><td>乘除</td><td>*、&#x2F;、&#x2F;&#x2F;、%</td><td>13</td><td align="center">左</td><td></td></tr><tr><td>加减</td><td>+、-</td><td>12</td><td align="center">左</td><td></td></tr><tr><td>位移</td><td>&gt;&gt;、&lt;&lt;</td><td>11</td><td align="center">左</td><td></td></tr><tr><td>按位与</td><td>&amp;</td><td>10</td><td align="center">右</td><td></td></tr><tr><td>按位异或</td><td>^</td><td>9</td><td align="center">左</td><td></td></tr><tr><td>按位或</td><td>|</td><td>8</td><td align="center">左</td><td></td></tr><tr><td>比较运算符</td><td>&#x3D;&#x3D;、!&#x3D;、&gt;、&gt;&#x3D;、&lt;、&lt;&#x3D;</td><td>7</td><td align="center">左</td><td></td></tr><tr><td>is 运算符</td><td>is、is not</td><td>6</td><td align="center">左</td><td></td></tr><tr><td>in 运算符</td><td>in、not in</td><td>5</td><td align="center">左</td><td></td></tr><tr><td>逻辑非</td><td>not</td><td>4</td><td align="center">右</td><td></td></tr><tr><td>逻辑与</td><td>and</td><td>3</td><td align="center">左</td><td></td></tr><tr><td>逻辑或</td><td>or</td><td>2</td><td align="center">左</td><td></td></tr><tr><td>逗号运算符</td><td>exp1, exp2</td><td>1</td><td align="center">左</td><td></td></tr></tbody></table><p>Python 中大部分运算符都具有左结合性，也就是从左到右执行；只有 ** 乘方运算符、单目运算符（例如 not 逻辑非运算符）、赋值运算符和三目运算符例外，它们具有右结合性，也就是从右向左执行。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>左右移运算符</title>
    <link href="/2022/02/26/%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8/%E5%B7%A6%E5%8F%B3%E7%A7%BB%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <url>/2022/02/26/%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8/%E5%B7%A6%E5%8F%B3%E7%A7%BB%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<h2 id="lt-lt-左移运算符"><a href="#lt-lt-左移运算符" class="headerlink" title="&lt;&lt;左移运算符"></a>&lt;&lt;左移运算符</h2><p>Python 左移运算符<code>&lt;&lt;</code>用来把操作数的各个二进制位全部左移若干位，高位丢弃，低位补 0。</p><p>例如，<code>9&lt;&lt;3</code>可以转换为如下的运算：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-string">&lt;&lt;</span> <span class="hljs-number">0000 </span><span class="hljs-number">0000</span> <span class="hljs-string">--</span> <span class="hljs-number">0000 </span><span class="hljs-number">0000</span> <span class="hljs-string">--</span> <span class="hljs-number">0000 </span><span class="hljs-number">0000</span> <span class="hljs-string">--</span> <span class="hljs-number">0000 </span><span class="hljs-number">1001</span>  <span class="hljs-string">（9</span> <span class="hljs-string">在内存中的存储）</span><br><span class="hljs-string">-----------------------------------------------------------------------------------</span><br>   <span class="hljs-number">0000 </span><span class="hljs-number">0000</span> <span class="hljs-string">--</span> <span class="hljs-number">0000 </span><span class="hljs-number">0000</span> <span class="hljs-string">--</span> <span class="hljs-number">0000 </span><span class="hljs-number">0000</span> <span class="hljs-string">--</span> <span class="hljs-number">0100 </span><span class="hljs-number">1000</span>  <span class="hljs-string">（72</span> <span class="hljs-string">在内存中的存储）</span><br></code></pre></div></td></tr></table></figure><p>所以<code>9&lt;&lt;3</code>的结果为 72。</p><p>又如，<code>(-9)&lt;&lt;3</code>可以转换为如下的运算：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-string">&lt;&lt;</span> <span class="hljs-number">1111 </span><span class="hljs-number">1111</span> <span class="hljs-string">--</span> <span class="hljs-number">1111 </span><span class="hljs-number">1111</span> <span class="hljs-string">--</span> <span class="hljs-number">1111 </span><span class="hljs-number">1111</span> <span class="hljs-string">--</span> <span class="hljs-number">1111 </span><span class="hljs-number">0111</span>  <span class="hljs-string">（-9</span> <span class="hljs-string">在内存中的存储）</span><br><span class="hljs-string">-----------------------------------------------------------------------------------</span><br>   <span class="hljs-number">1111 </span><span class="hljs-number">1111</span> <span class="hljs-string">--</span> <span class="hljs-number">1111 </span><span class="hljs-number">1111</span> <span class="hljs-string">--</span> <span class="hljs-number">1111 </span><span class="hljs-number">1111</span> <span class="hljs-string">--</span> <span class="hljs-number">1011 </span><span class="hljs-number">1000</span>  <span class="hljs-string">（-72</span> <span class="hljs-string">在内存中的存储）</span><br></code></pre></div></td></tr></table></figure><p>所以<code>(-9)&lt;&lt;3</code>的结果为 -72</p><p>如果数据较小，被丢弃的高位不包含 1，那么左移 n 位相当于乘以 2 的 n 次方。</p><p>使用 Python 代码对上面的分析进行验证：</p><figure class="highlight lisp"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs lisp">print(<span class="hljs-string">&quot;%X&quot;</span> % (<span class="hljs-number">9</span>&lt;&lt;3) )print(<span class="hljs-string">&quot;%X&quot;</span> % ((<span class="hljs-name">-9</span>)&lt;&lt;3) )<br></code></pre></div></td></tr></table></figure><p>运行结果：<br>48<br>-48</p><h2 id="gt-gt-右移运算符"><a href="#gt-gt-右移运算符" class="headerlink" title="&gt;&gt;右移运算符"></a>&gt;&gt;右移运算符</h2><p>Python 右移运算符<code>&gt;&gt;</code>用来把操作数的各个二进制位全部右移若干位，低位丢弃，高位补 0 或 1。如果数据的最高位是 0，那么就补 0；如果最高位是 1，那么就补 1。</p><p>例如，<code>9&gt;&gt;3</code>可以转换为如下的运算：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-string">&gt;&gt;</span> <span class="hljs-number">0000 </span><span class="hljs-number">0000</span> <span class="hljs-string">--</span> <span class="hljs-number">0000 </span><span class="hljs-number">0000</span> <span class="hljs-string">--</span> <span class="hljs-number">0000 </span><span class="hljs-number">0000</span> <span class="hljs-string">--</span> <span class="hljs-number">0000 </span><span class="hljs-number">1001</span>  <span class="hljs-string">（9</span> <span class="hljs-string">在内存中的存储）</span><br><span class="hljs-string">-----------------------------------------------------------------------------------</span><br>   <span class="hljs-number">0000 </span><span class="hljs-number">0000</span> <span class="hljs-string">--</span> <span class="hljs-number">0000 </span><span class="hljs-number">0000</span> <span class="hljs-string">--</span> <span class="hljs-number">0000 </span><span class="hljs-number">0000</span> <span class="hljs-string">--</span> <span class="hljs-number">0000 </span><span class="hljs-number">0001</span>  <span class="hljs-string">（1</span> <span class="hljs-string">在内存中的存储）</span><br></code></pre></div></td></tr></table></figure><p>所以<code>9&gt;&gt;3</code>的结果为 1。</p><p>又如，<code>(-9)&gt;&gt;3</code>可以转换为如下的运算：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-string">&gt;&gt;</span> <span class="hljs-number">1111 </span><span class="hljs-number">1111</span> <span class="hljs-string">--</span> <span class="hljs-number">1111 </span><span class="hljs-number">1111</span> <span class="hljs-string">--</span> <span class="hljs-number">1111 </span><span class="hljs-number">1111</span> <span class="hljs-string">--</span> <span class="hljs-number">1111 </span><span class="hljs-number">0111</span>  <span class="hljs-string">（-9</span> <span class="hljs-string">在内存中的存储）</span><br><span class="hljs-string">-----------------------------------------------------------------------------------</span><br>   <span class="hljs-number">1111 </span><span class="hljs-number">1111</span> <span class="hljs-string">--</span> <span class="hljs-number">1111 </span><span class="hljs-number">1111</span> <span class="hljs-string">--</span> <span class="hljs-number">1111 </span><span class="hljs-number">1111</span> <span class="hljs-string">--</span> <span class="hljs-number">1111 </span><span class="hljs-number">1110</span>  <span class="hljs-string">（-2</span> <span class="hljs-string">在内存中的存储）</span><br></code></pre></div></td></tr></table></figure><p>所以<code>(-9)&gt;&gt;3</code>的结果为 -2</p><p>如果被丢弃的低位不包含 1，那么右移 n 位相当于除以 2 的 n 次方（但被移除的位中经常会包含 1）。</p><p>使用 Python 代码对上面的分析进行验证：</p><figure class="highlight lisp"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs lisp">print(<span class="hljs-string">&quot;%X&quot;</span> % (<span class="hljs-number">9</span>&gt;&gt;3) )print(<span class="hljs-string">&quot;%X&quot;</span> % ((<span class="hljs-name">-9</span>)&gt;&gt;3) )<br></code></pre></div></td></tr></table></figure><p>运行结果：<br>1<br>-2</p>]]></content>
    
    
    <categories>
      
      <category>运算符与变量使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>运算符与变量使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
